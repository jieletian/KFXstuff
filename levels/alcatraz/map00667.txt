LEVEL_VERSION(1)
SET_GENERATE_SPEED(400)
START_MONEY(ALL_PLAYERS,0)
MAX_CREATURES(ALL_PLAYERS,25)

ADD_CREATURE_TO_POOL(FLY,20)
ADD_CREATURE_TO_POOL(BUG,20)
ADD_CREATURE_TO_POOL(TROLL,20)
ADD_CREATURE_TO_POOL(SPIDER,20)
ADD_CREATURE_TO_POOL(HELL_HOUND,20)
ADD_CREATURE_TO_POOL(TENTACLE,20)
ADD_CREATURE_TO_POOL(SORCEROR,20)
ADD_CREATURE_TO_POOL(ORC,20)
ADD_CREATURE_TO_POOL(BILE_DEMON,20)
ADD_CREATURE_TO_POOL(DRAGON,20)
ADD_CREATURE_TO_POOL(DARK_MISTRESS,20)

CREATURE_AVAILABLE(ALL_PLAYERS,FLY,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,BUG,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,DEMONSPAWN,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,TROLL,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,SPIDER,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,HELL_HOUND,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,TENTACLE,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,SORCEROR,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,ORC,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,BILE_DEMON,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,DRAGON,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,DARK_MISTRESS,1,0)

ROOM_AVAILABLE(ALL_PLAYERS,TREASURE,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,LAIR,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,GARDEN,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,TRAINING,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,RESEARCH,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,GUARD_POST,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,WORKSHOP,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,BARRACKS,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,TEMPLE,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,SCAVENGER,1,0)
ROOM_AVAILABLE(PLAYER0,TORTURE,0,0)
ROOM_AVAILABLE(PLAYER0,PRISON,0,0)
ROOM_AVAILABLE(PLAYER0,BRIDGE,0,0)
ROOM_AVAILABLE(PLAYER0,GRAVEYARD,0,0)

MAGIC_AVAILABLE(ALL_PLAYERS,POWER_HAND,1,1)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_SLAP,1,1)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_POSSESS,1,1)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_SIGHT,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_SPEED,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_OBEY,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_CALL_TO_ARMS,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_CONCEAL,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_HOLD_AUDIENCE,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_CAVE_IN,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_HEAL_CREATURE,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_LIGHTNING,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_PROTECT,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_CHICKEN,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_DISEASE,1,0)


TRAP_AVAILABLE(ALL_PLAYERS,ALARM,1,0)
TRAP_AVAILABLE(ALL_PLAYERS,POISON_GAS,1,0)
TRAP_AVAILABLE(ALL_PLAYERS,LIGHTNING,1,0)
TRAP_AVAILABLE(ALL_PLAYERS,LAVA,1,0)
TRAP_AVAILABLE(ALL_PLAYERS,BOULDER,1,0)
TRAP_AVAILABLE(ALL_PLAYERS,WORD_OF_POWER,1,0)

DOOR_AVAILABLE(ALL_PLAYERS,WOOD,1,0)
DOOR_AVAILABLE(ALL_PLAYERS,BRACED,1,0)
DOOR_AVAILABLE(ALL_PLAYERS,STEEL,1,0)
DOOR_AVAILABLE(ALL_PLAYERS,MAGIC,1,0)

IF(PLAYER0,ALL_DUNGEONS_DESTROYED == 1)
	WIN_GAME
ENDIF

QUICK_OBJECTIVE(1, "The previous owner of this dungeon was destroyed. Their army taken prisoner... They may prove useful.")

REM -- message
IF_ACTION_POINT(1,PLAYER0)
	QUICK_INFORMATION(1, "These Imps seem to have hoarded all the gold. protect them!", 1)
ENDIF

REM -- Create a hero party to spawn
CREATE_PARTY(MIX_PARTY)
ADD_TO_PARTY(MIX_PARTY,AVATAR,10,250,ATTACK_DUNGEON_HEART,0)
ADD_TO_PARTY(MIX_PARTY,WIZARD,10,250,ATTACK_DUNGEON_HEART,0)
ADD_TO_PARTY(MIX_PARTY,MONK,10,250,ATTACK_DUNGEON_HEART,0)
ADD_TO_PARTY(MIX_PARTY,WITCH,10,250,ATTACK_DUNGEON_HEART,0)
ADD_TO_PARTY(MIX_PARTY,FAIRY,10,250,ATTACK_DUNGEON_HEART,0)
ADD_TO_PARTY(MIX_PARTY,KINGHT,10,250,ATTACK_DUNGEON_HEART,0)
ADD_TO_PARTY(MIX_PARTY,SAMURAI,10,250,ATTACK_DUNGEON_HEART,0)

REM -- Spawn a hero party at action point 2 when reaching action point 2
IF_ACTION_POINT(2,PLAYER0)
	ADD_PARTY_TO_LEVEL(PLAYER_GOOD,MIX_PARTY,2,3)
	QUICK_INFORMATION(2, "Damn Reinforcement", 1)
ENDIF

IF_ACTION_POINT(8,PLAYER0)
	ADD_PARTY_TO_LEVEL(PLAYER_GOOD,MIX_PARTY,2,5)
	QUICK_INFORMATION(8, "Guards Guards!", 1)
ENDIF

REM -- MESSAGE FOR FINDING IMP SPELL
IF_ACTION_POINT(3,PLAYER0)
	QUICK_INFORMATION(3, "Finally you can create some more Imps!", 1)
ENDIF

REM -- MESSAGE FOR FINDING DESTROY WALLS.
IF_ACTION_POINT(4,PLAYER0)
	QUICK_INFORMATION(4, "Sweet, Destroy walls! this could be useful!", 1)
ENDIF

REM -- activation bridge after finding
IF(PLAYER0,TEMPLE > 0)
	ROOM_AVAILABLE(PLAYER0,TEMPLE,1,1)
ENDIF

REM -- activation bridge after finding
IF(PLAYER0,BRIDGE > 0)
	ROOM_AVAILABLE(PLAYER0,BRIDGE,1,1)
ENDIF

REM -- activation bridge after finding
IF(PLAYER0,TORTURE > 0)
	ROOM_AVAILABLE(PLAYER0,TORTURE,1,1)
ENDIF

REM -- activation bridge after finding
IF(PLAYER0,TRAINING > 0)
	ROOM_AVAILABLE(PLAYER0,TRAINING,1,1)
ENDIF

REM -- activation bridge after finding
IF(PLAYER0,WORKSHOP > 0)
	ROOM_AVAILABLE(PLAYER0,WORKSHOP,1,1)
ENDIF

REM -- activation bridge after finding
IF(PLAYER0,GRAVEYARD > 0)
	ROOM_AVAILABLE(PLAYER0,GRAVEYARD,1,1)
ENDIF

REM -- activation bridge after finding
IF(PLAYER0,BARRACKS > 0)
	ROOM_AVAILABLE(PLAYER0,BARRACKS,1,1)
ENDIF

REM -- activation bridge after finding
IF(PLAYER0,SCAVENGER > 0)
	ROOM_AVAILABLE(PLAYER0,SCAVENGER,1,1)
ENDIF

REM -- MESSAGE FOR FINDING BRIDGE.
IF_ACTION_POINT(5,PLAYER0)
	QUICK_INFORMATION(5, "You have found an old Bridge!", 1)
ENDIF

REM -- ACTIVATION PRISON AFTER BEING FOUND
IF(PLAYER0,PRISON > 0)
	ROOM_AVAILABLE(PLAYER0,PRISON,1,1)
ENDIF

REM -- MESSAGE FOR FINDING PRISON.
IF_ACTION_POINT(6,PLAYER0)
	QUICK_INFORMATION(6, "This abandoned prison may prove useful!", 1)
ENDIF

REM -- MESSAGE FOR FINDING MAD MONK.
IF_ACTION_POINT(7,PLAYER0)
	QUICK_INFORMATION(7, "yOU FOuNd THE mAD mOnKS lAIR!!!!!!!", 1)
ENDIF
	
REM -- MESSAGE FOR FINDING sewers
IF_ACTION_POINT(9,PLAYER0)
	QUICK_INFORMATION(9, "The Prison Sewers.  perhaps you can Andy Dufrene your way in.!!!!!", 1)
ENDIF
	
REM -- MESSAGE FOR FINDING spider
IF_ACTION_POINT(10,PLAYER0)
	QUICK_INFORMATION(10, "A spider... did you keep a beetle alive?., 1)
ENDIF

REM -- MESSAGE FOR FINDING lake
IF_ACTION_POINT(11,PLAYER0)
	QUICK_INFORMATION(11, "It seems this dungeon was built around an old lake, I wonder if there is anything here., 1)
ENDIF	
	
REM -- MESSAGE FOR FINDING the prison
IF_ACTION_POINT(12,PLAYER0)
	QUICK_INFORMATION(12, "Alcatraz! Heavily guarded. but the spoils are vast, 1)
ENDIF		

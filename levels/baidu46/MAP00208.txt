


SET_GENERATE_SPEED(70)

COMPUTER_PLAYER(PLAYER1,	10)
COMPUTER_PLAYER(PLAYER2,	10)
COMPUTER_PLAYER(PLAYER3,	10)

START_MONEY(	PLAYER0,	44444)
START_MONEY(	PLAYER1,	55555)
START_MONEY(	PLAYER2,	44444)
START_MONEY(	PLAYER3,	44444)

MAX_CREATURES(	PLAYER0,	33)
MAX_CREATURES(	PLAYER1,	38)
MAX_CREATURES(	PLAYER2,	30)
MAX_CREATURES(	PLAYER3,	30)

ADD_CREATURE_TO_POOL(	BARBARIAN,      300)
ADD_CREATURE_TO_POOL(	GIANT,		150)
ADD_CREATURE_TO_POOL(	SAMURAI,	200)
ADD_CREATURE_TO_POOL(	KNIGHT,		300)
ADD_CREATURE_TO_POOL(	WIZARD,		100)
ADD_CREATURE_TO_POOL(	ARCHER,		150)
ADD_CREATURE_TO_POOL(	SKELETON,	100)
ADD_CREATURE_TO_POOL(	TROLL,		100)
ADD_CREATURE_TO_POOL(	DRAGON,		100)
ADD_CREATURE_TO_POOL(	DARK_MISTRESS,	100)
ADD_CREATURE_TO_POOL(	SORCEROR,	100)
ADD_CREATURE_TO_POOL(	BILE_DEMON,	100)
ADD_CREATURE_TO_POOL(	VAMPIRE,	100)
ADD_CREATURE_TO_POOL(	HELL_HOUND,	100)
ADD_CREATURE_TO_POOL(	TENTACLE,	100)
ADD_CREATURE_TO_POOL(	GHOST,		100)
ADD_CREATURE_TO_POOL(	ORC,		100）
ADD_CREATURE_TO_POOL(	HORNY,		80）

CREATURE_AVAILABLE(	ALL_PLAYERS,	BARBARIAN,	1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	GIANT,		1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	SAMURAI,	1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	KNIGHT,	        1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	WIZARD,	        1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	ARCHER,		1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	SKELETON,	1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	TROLL,		1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	DRAGON,	        1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	DARK_MISTRESS,	1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	BILE_DEMON,	1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	SORCEROR,	1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	VAMPIRE,	1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	HELL_HOUND,	1,			1)
CREATURE_AVAILABLE(	ALL_PLAYERS,	GHOST,	        1,
CREATURE_AVAILABLE(	ALL_PLAYERS,	HORNY,	        1,			1)

ROOM_AVAILABLE(		ALL_PLAYERS,	TREASURE,	1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	RESEARCH,	1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	WORKSHOP,	1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	GARDEN,		1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	LAIR,		1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	GUARD_POST,	1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	GRAVEYARD,	1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	PRISON,		1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	TORTURE,	1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	TRAINING,	1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	BARRACKS,	1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	TEMPLE,		1,			0)
ROOM_AVAILABLE(		ALL_PLAYERS,	BRIDGE,		1,			0)

DOOR_AVAILABLE(		ALL_PLAYERS,	MAGIC,			1,			1)

TRAP_AVAILABLE(		ALL_PLAYERS,	POISON_GAS,		1,			1)
TRAP_AVAILABLE(		ALL_PLAYERS,	LIGHTNING,		1,			1)
TRAP_AVAILABLE(		ALL_PLAYERS,	WORD_OF_POWER,		1,			1)

MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_IMP,		1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_OBEY,		1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_SIGHT,		1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_CALL_TO_ARMS,	1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_HEAL_CREATURE,	1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_HOLD_AUDIENCE,	1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_CAVE_IN,		1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_SPEED,		1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_PROTECT,		1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_CONCEAL,		1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_DISEASE,		1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_CHICKEN,		1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_DESTROY_WALLS,	1,			0)
MAGIC_AVAILABLE(	ALL_PLAYERS,	POWER_ARMAGEDDON,	1,			0)

RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_IMP,	          5000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 TREASURE,	          5000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 GARDEN,	          5000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_SPEED,	          5000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_SIGHT,	          5000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 TRAINING,	          5000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_OBEY,	          10000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 Lair,	                  5000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_CALL_TO_ARMS,	  7000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_CONCEAL,	          6000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 RESEARCH,	          5000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_HEAL_CREATURE,	  10000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 BRIDGE,	          9000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_HOLD_AUDIENCE,	  7000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 GUARD_POST,	          9000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 WORKSHOP,	          9000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_PROTECT,	          10000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 BARRACKS,	          9000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_DISEASE,	          10000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 PRISON,	          9000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 TORTURE,	          9000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_CAVE_IN,	          10000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 TEMPLE,	          9000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_CHICKEN,	          10000)
RESEARCH(	ALL_PLAYERS,	ROOM,		 GRAVEYARD,	          10000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_ARMAGEDDON,	  200000)
RESEARCH(	ALL_PLAYERS,	MAGIC,		 POWER_DESTROY_WALLS,	  100000)


QUICK_OBJECTIVE(0,"百度{地下城守护者}吧 吧主[地下城统治者]倾情奉献 地图名称:war(五强争霸) 版本号:v.1.04 地图类型:自卫反击类 难度系数：较难 作者:地下城统治者 ",PLAYER0)



CREATE_PARTY(PARTY1)
CREATE_PARTY(PARTY2)
CREATE_PARTY(PARTY3)
CREATE_PARTY(PARTY4)
CREATE_PARTY(PARTY5)


ADD_TO_PARTY(      PARTY1,	TUNNELLER,	10,   	1000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY1,	BARBARIAN,	10,   	1000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY1,	KNIGHT,	        10,   	1000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY1,	GIANT,	        10,   	1000,        ATTACK_DUNGEON_HEART,      0)

ADD_TO_PARTY(      PARTY2,	THIEF,	        10,   	2000,        STEAL_GOLD,                0)
ADD_TO_PARTY(      PARTY2,	ARCHER,	        10,   	2000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY2,	ARCHER,	        10,   	2000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY2,	KNIGHT,	        10,   	2000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY2,	GIANT,	        10,   	2000,        ATTACK_DUNGEON_HEART,      0)

ADD_TO_PARTY(      PARTY3,	WIZARD,	        10,   	3000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY3,	FAIRY,	        10,   	3000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY3,	BARBARIAN,	10,   	3000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY3,	GIANT,	        10,   	3000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY3,	KNIGHT,	        10,   	3000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY3,	SAMURAI,	10,   	3000,        ATTACK_DUNGEON_HEART,      0)

ADD_TO_PARTY(      PARTY4,	WIZARD,	        10,   	4000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY4,	FAIRY,	        10,   	4000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY4,	BARBARIAN,	10,   	4000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY4,	GIANT,	        10,   	4000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY4,	KNIGHT,	        10,   	4000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY4,	SAMURAI,	10,   	4000,        ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY4,	ARCHER,	        10,   	4000,        ATTACK_DUNGEON_HEART,      0)

ADD_TO_PARTY(      PARTY5,	AVATAR,	        10,   	99999,       ATTACK_DUNGEON_HEART,      0)
ADD_TO_PARTY(      PARTY5,	AVATAR,	        10,   	99999,       ATTACK_DUNGEON_HEART,      0)

SET_TIMER(PLAYER0,TIMER0)

IF(PLAYER0,TIMER0>=100)
QUICK_INFORMATION(0,"四个愚蠢的敌人不自量力地挑战你,给他们点颜色瞧瞧!.",PLAYER0)
ENDIF

IF(PLAYER0,TIMER0>=9000)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY1,         1,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY1,         2,		             1)
ENDIF

IF(PLAYER0,TIMER0>=12500)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY2,         1,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY2,         2,		             1)
ENDIF

IF(PLAYER0,TIMER0>=16000)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY3,         1,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY3,         2,		             1)
ENDIF

IF(PLAYER0,TIMER0>=20500)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY4,         1,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY4,         2,		             1)
ENDIF

IF(PLAYER0,TIMER0>=25000)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY1,         1,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY2,         1,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY3,         1,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY4,         1,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY1,         2,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY2,         2,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY3,         2,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY4,         2,		             1)
ENDIF

IF(PLAYER0,TIMER0>=30000)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY5,         1,		             1)
ADD_PARTY_TO_LEVEL(       PLAYER_GOOD,          PARTY5,         2,		             1)
ENDIF


IF(PLAYER1,DUNGEON_DESTROYED==1)
	IF(PLAYER2,DUNGEON_DESTROYED==1)
		IF(PLAYER3,DUNGEON_DESTROYED==1)
	               IF(PLAYER_GOOD,DUNGEON_DESTROYED==1)
			WIN_GAME
                       ENDIF
		ENDIF
	ENDIF
ENDIF
REM ***********************************************************************
REM   Script for Level    460.Sandbox Level
REM   Sandbox Level. Kill the Avatar to win
REM ***********************************************************************
REM 1、此脚本很复杂，使用了很多中间变量FLAG来控制执行情况。
REM 2、 按英文说明是杀圣者就可以胜利，实际脚本代码是人类心脏被打爆就胜利。
REM 3、由于人地图可生产人口数量较大，很容易就会卡死，建议改最大人口或死点让敌人开战 。
REM 4、 脚本有47对条件语句，如果要修改小心超过48对。
REM 5、 。
REM ***********************************************************************
REM 原来最大人口为30、40、40，建议改为20，30，30
SET_GENERATE_SPEED(400)
MAX_CREATURES(PLAYER0,30)
MAX_CREATURES(PLAYER1,40)
MAX_CREATURES(PLAYER2,40)
START_MONEY(PLAYER0,15000)
START_MONEY(PLAYER1,100000)
START_MONEY(PLAYER2,100000)
COMPUTER_PLAYER(PLAYER1,0)
COMPUTER_PLAYER(PLAYER2,0)

ADD_CREATURE_TO_POOL(BILE_DEMON,50)
ADD_CREATURE_TO_POOL(DRAGON,50)
ADD_CREATURE_TO_POOL(DARK_MISTRESS,50)
ADD_CREATURE_TO_POOL(ORC,50)
ADD_CREATURE_TO_POOL(SORCEROR,35)
ADD_CREATURE_TO_POOL(HELL_HOUND,35)
ADD_CREATURE_TO_POOL(TROLL,35)
ADD_CREATURE_TO_POOL(DEMONSPAWN,20)
ADD_CREATURE_TO_POOL(TENTACLE,20)
ADD_CREATURE_TO_POOL(SPIDER,20)
ADD_CREATURE_TO_POOL(BUG,20)
ADD_CREATURE_TO_POOL(FLY,20)

CREATURE_AVAILABLE(ALL_PLAYERS,TROLL,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,TENTACLE,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,DEMONSPAWN,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,FLY,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,DARK_MISTRESS,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,SORCEROR,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,BILE_DEMON,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,BUG,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,SPIDER,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,HELL_HOUND,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,DRAGON,1,1)
CREATURE_AVAILABLE(ALL_PLAYERS,ORC,1,1)

ROOM_AVAILABLE(ALL_PLAYERS,GUARD_POST,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,TREASURE,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,GARDEN,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,LAIR,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,TRAINING,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,RESEARCH,1,1)
ROOM_AVAILABLE(ALL_PLAYERS,WORKSHOP,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,GRAVEYARD,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,PRISON,1,0)
ROOM_AVAILABLE(PLAYER0,SCAVENGER,1,0)
ROOM_AVAILABLE(PLAYER0,BRIDGE,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,BARRACKS,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,TORTURE,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,TEMPLE,1,0)

MAGIC_AVAILABLE(ALL_PLAYERS,POWER_HAND,1,1)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_OBEY,1,1)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_IMP,1,1)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_SLAP,1,1)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_SIGHT,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_CALL_TO_ARMS,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_CAVE_IN,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_HEAL_CREATURE,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_HOLD_AUDIENCE,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_SPEED,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_CONCEAL,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_PROTECT,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_DESTROY_WALLS,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_CHICKEN,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_LIGHTNING,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_DISEASE,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_ARMAGEDDON,1,0)
MAGIC_AVAILABLE(PLAYER1,POWER_CHICKEN,1,0)
MAGIC_AVAILABLE(PLAYER2,POWER_LIGHTNING,1,0)

DOOR_AVAILABLE(PLAYER0,BRACED,1,0)
DOOR_AVAILABLE(ALL_PLAYERS,STEEL,1,0)
DOOR_AVAILABLE(ALL_PLAYERS,MAGIC,1,0)

REM TRAP_AVAILABLE(ALL_PLAYERS,ALARM,1,0)
TRAP_AVAILABLE(ALL_PLAYERS,POISON_GAS,1,0)
TRAP_AVAILABLE(PLAYER0,LAVA,1,0)
TRAP_AVAILABLE(PLAYER0,BOULDER,1,0)
TRAP_AVAILABLE(PLAYER0,LIGHTNING,1,0)
TRAP_AVAILABLE(PLAYER0,WORD_OF_POWER,1,0)

CREATE_PARTY(ONE)
    ADD_TO_PARTY(ONE,BARBARIAN,5,200,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(ONE,KNIGHT,5,200,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(ONE,SAMURAI,5,200,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(ONE,WIZARD,5,200,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(ONE,ARCHER,5,200,ATTACK_DUNGEON_HEART,0)
CREATE_PARTY(TWO)
    ADD_TO_PARTY(TWO,SAMURAI,7,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(TWO,KNIGHT,8,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(TWO,ARCHER,8,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(TWO,WIZARD,7,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(TWO,BARBARIAN,7,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(TWO,ARCHER,8,250,ATTACK_DUNGEON_HEART,0)
CREATE_PARTY(THREE)
    ADD_TO_PARTY(THREE,WIZARD,8,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(THREE,KNIGHT,8,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(THREE,SAMURAI,7,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(THREE,SAMURAI,7,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(THREE,SAMURAI,7,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(THREE,WIZARD,8,250,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(THREE,WIZARD,8,250,ATTACK_DUNGEON_HEART,0)
CREATE_PARTY(FOUR)
    ADD_TO_PARTY(FOUR,SAMURAI,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FOUR,KNIGHT,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FOUR,BARBARIAN,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FOUR,WIZARD,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FOUR,WIZARD,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FOUR,ARCHER,10,500,ATTACK_DUNGEON_HEART,0)
CREATE_PARTY(FIVE)
    ADD_TO_PARTY(FIVE,SAMURAI,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FIVE,KNIGHT,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FIVE,WIZARD,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FIVE,SAMURAI,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FIVE,SAMURAI,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FIVE,WIZARD,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(FIVE,WIZARD,10,500,ATTACK_DUNGEON_HEART,0)

CREATE_PARTY(AVATARA)
    ADD_TO_PARTY(AVATARA,SAMURAI,7,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARA,AVATAR,10,5000,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARA,SAMURAI,7,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARA,KNIGHT,7,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARA,KNIGHT,7,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARA,WIZARD,7,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARA,WIZARD,7,500,ATTACK_DUNGEON_HEART,0)
CREATE_PARTY(AVATARC)
    ADD_TO_PARTY(AVATARC,SAMURAI,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARC,AVATAR,10,5000,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARC,SAMURAI,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARC,KNIGHT,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARC,KNIGHT,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARC,WIZARD,10,500,ATTACK_DUNGEON_HEART,0)
    ADD_TO_PARTY(AVATARC,WIZARD,10,500,ATTACK_DUNGEON_HEART,0)

SET_FLAG(PLAYER0,FLAG0,0)
SET_FLAG(PLAYER_GOOD,FLAG0,0) 
SET_FLAG(PLAYER_GOOD,FLAG1,0)
SET_FLAG(PLAYER_GOOD,FLAG2,0)
SET_TIMER(PLAYER_GOOD,TIMER0) 

REM QUICK_OBJECTIVE(0,"Destroy the Hero Dungeon Heart in the North to Win, but beware the Avatar. With your eventual knowledge of Bridges and Scavenger Rooms, you may Steal their Gems and Minions, or Pit them against the Heroes.",PLAYER0)
QUICK_OBJECTIVE(0,"消灭地下城北方的英雄，要小心圣者。随着你对桥梁和招募室的最终了解，你可能会窃取他们的宝石和奴仆，或者将他们埋葬在英雄们面前。",PLAYER0)

REM QUICK_INFORMATION(1,"Barracks Tiles will Set the Strength of the Heroes, at 16,25,30,36 each. Temple Tiles determine how long before the next Spawn, 25,30,36 tiles for 20,10,1 minute. Torture Chamber Tiles set the Southern Attacks at 30, 36 tiles.",PLAYER0)
QUICK_INFORMATION(1,"军营数量在16、25、30、36各设刷怪强度，寺庙数量决定下一次刷怪时间（25、30、36块标志20、10、1分钟），审讯室数量设置了30, 36南部攻击。",PLAYER0)

IF(PLAYER0,BARRACKS < 16)
    NEXT_COMMAND_REUSABLE
    SET_FLAG(PLAYER0,FLAG0,1)
ENDIF
IF(PLAYER0,BARRACKS >= 16)
    NEXT_COMMAND_REUSABLE
    SET_FLAG(PLAYER0,FLAG0,2)
    IF(PLAYER0,BARRACKS >= 25)
        NEXT_COMMAND_REUSABLE
          SET_FLAG(PLAYER0,FLAG0,3)
            IF(PLAYER0,BARRACKS >= 30)
                NEXT_COMMAND_REUSABLE
                SET_FLAG(PLAYER0,FLAG0,4)
                IF(PLAYER0,BARRACKS >= 36)
                    NEXT_COMMAND_REUSABLE
                    SET_FLAG(PLAYER0,FLAG0,5)
                ENDIF
            ENDIF
    ENDIF
ENDIF

REM 如果此段脚本控制成功，证明代码是一行一行按顺序执行。
IF(PLAYER0,TEMPLE >= 25)
    IF(PLAYER0,TEMPLE >= 30)
        IF(PLAYER0,TEMPLE >= 36)
            IF(PLAYER_GOOD,TIMER0 >= 1200)
                NEXT_COMMAND_REUSABLE
                SET_FLAG(PLAYER_GOOD,FLAG0,1) 
                NEXT_COMMAND_REUSABLE
                SET_TIMER(PLAYER_GOOD,TIMER0) 
            ENDIF
        ENDIF
        IF(PLAYER_GOOD,TIMER0 >= 12000)
            NEXT_COMMAND_REUSABLE
            SET_FLAG(PLAYER_GOOD,FLAG0,1) 
            NEXT_COMMAND_REUSABLE
            SET_TIMER(PLAYER_GOOD,TIMER0) 
        ENDIF
    ENDIF
    IF(PLAYER_GOOD,TIMER0 >= 24000)
        NEXT_COMMAND_REUSABLE
        SET_FLAG(PLAYER_GOOD,FLAG0,1)
        NEXT_COMMAND_REUSABLE
        SET_TIMER(PLAYER_GOOD,TIMER0) 
    ENDIF
ENDIF

IF(PLAYER_GOOD,FLAG0 == 1)
    NEXT_COMMAND_REUSABLE
    SET_FLAG(PLAYER_GOOD,FLAG0,0)
    IF(PLAYER_GOOD,TOTAL_CREATURES < 100)
        NEXT_COMMAND_REUSABLE
        SET_FLAG(PLAYER_GOOD,FLAG3,1)
    ENDIF
ENDIF

IF(PLAYER_GOOD,FLAG3 == 1)
    IF(PLAYER0,FLAG0 == 1)
        NEXT_COMMAND_REUSABLE
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,ONE,-3,1)
    ENDIF
    IF(PLAYER0,FLAG0 == 2)
        NEXT_COMMAND_REUSABLE
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,TWO,-3,1)            
    ENDIF
    IF(PLAYER0,FLAG0 == 3)
        NEXT_COMMAND_REUSABLE
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,THREE,-3,1)                        
    ENDIF
    IF(PLAYER0,FLAG0 == 4)
        NEXT_COMMAND_REUSABLE
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,FOUR,-3,1)                        
    ENDIF
    IF(PLAYER0,FLAG0 == 5)
        IF(PLAYER0,BARRACKS < 49)
            NEXT_COMMAND_REUSABLE
            ADD_PARTY_TO_LEVEL(PLAYER_GOOD,FIVE,-3,1)                                    
        ENDIF
        IF(PLAYER0,BARRACKS >= 49)
            NEXT_COMMAND_REUSABLE
            ADD_PARTY_TO_LEVEL(PLAYER_GOOD,AVATARC,-3,1)
        ENDIF
    ENDIF
    IF(PLAYER0,TORTURE >=30)
        NEXT_COMMAND_REUSABLE
            SET_FLAG(PLAYER_GOOD,FLAG4,1)
        IF(PLAYER0,TORTURE >=36)
            NEXT_COMMAND_REUSABLE
                SET_FLAG(PLAYER_GOOD,FLAG5,1)
        ENDIF
    ENDIF
    NEXT_COMMAND_REUSABLE
    SET_FLAG(PLAYER_GOOD,FLAG3,0)
ENDIF

IF(PLAYER_GOOD,FLAG4 == 1)
    IF(PLAYER0,FLAG0 == 1)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,ONE,-4,DUNGEON_HEART,0,5,200)
    ENDIF
    IF(PLAYER0,FLAG0 == 2)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,TWO,-4,DUNGEON_HEART,0,8,250)
    ENDIF
    IF(PLAYER0,FLAG0 == 3)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,THREE,-4,DUNGEON_HEART,0,8,250)
    ENDIF
    IF(PLAYER0,FLAG0 == 4)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,FOUR,-4,DUNGEON_HEART,0,10,500)
    ENDIF
    IF(PLAYER0,FLAG0 == 5)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,FIVE,-4,DUNGEON_HEART,0,10,500)
    ENDIF
    NEXT_COMMAND_REUSABLE
    SET_FLAG(PLAYER_GOOD,FLAG4,0)
ENDIF

IF(PLAYER_GOOD,FLAG5 == 1)
    IF(PLAYER0,FLAG0 == 1)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,ONE,-5,DUNGEON_HEART,0,5,200)
    ENDIF
    IF(PLAYER0,FLAG0 == 2)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,TWO,-5,DUNGEON_HEART,0,8,250)
    ENDIF
    IF(PLAYER0,FLAG0 == 3)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,THREE,-5,DUNGEON_HEART,0,8,250)
    ENDIF
    IF(PLAYER0,FLAG0 == 4)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,FOUR,-5,DUNGEON_HEART,0,10,500)
    ENDIF
    IF(PLAYER0,FLAG0 == 5)
        NEXT_COMMAND_REUSABLE
        ADD_TUNNELLER_PARTY_TO_LEVEL(PLAYER_GOOD,FIVE,-5,DUNGEON_HEART,0,10,500)
    ENDIF
    NEXT_COMMAND_REUSABLE
    SET_FLAG(PLAYER_GOOD,FLAG5,0)
ENDIF

IF(PLAYER_GOOD,FLAG2 == 0)
    IF_ACTION_POINT(1,PLAYER0)
        NEXT_COMMAND_REUSABLE
        SET_FLAG(PLAYER_GOOD,FLAG2,1)
    ENDIF
    IF_ACTION_POINT(2,PLAYER0)
        NEXT_COMMAND_REUSABLE
        SET_FLAG(PLAYER_GOOD,FLAG2,1)
    ENDIF
ENDIF

IF(PLAYER_GOOD,FLAG2 == 1)
    IF(PLAYER0,FLAG0 <= 3)
        NEXT_COMMAND_REUSABLE
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,TWO,-1,1) 
        NEXT_COMMAND_REUSABLE
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,TWO,-2,1)
    ENDIF
    IF(PLAYER0,FLAG0 > 3)
        NEXT_COMMAND_REUSABLE
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,FIVE,-1,1)                                    
        NEXT_COMMAND_REUSABLE
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,FIVE,-2,1)
    ENDIF
    NEXT_COMMAND_REUSABLE
    SET_FLAG(PLAYER_GOOD,FLAG2,2)
    NEXT_COMMAND_REUSABLE
    REM 下面这个TIMER1应该是TIMER0，控制刷怪间隔，TIMER1启动了就没有用过。
    SET_TIMER(PLAYER_GOOD,TIMER0) 
ENDIF

IF(PLAYER_GOOD,FLAG2 == 2)
    IF(PLAYER_GOOD,TIMER0 >= 12000)
        NEXT_COMMAND_REUSABLE
        SET_FLAG(PLAYER_GOOD,FLAG2,0)
    ENDIF
ENDIF

IF_ACTION_POINT(3,PLAYER0)
    SET_FLAG(PLAYER_GOOD,FLAG1,1)
    IF(PLAYER0,FLAG0 <= 3)
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,TWO,-1,1) 
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,TWO,-2,1) 
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,AVATARA,-6,1) 
    ENDIF
    IF(PLAYER0,FLAG0 > 3)
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,FIVE,-1,1)                                    
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,FIVE,-2,1) 
        ADD_PARTY_TO_LEVEL(PLAYER_GOOD,AVATARC,-6,1) 
    ENDIF
ENDIF



IF(PLAYER_GOOD,DUNGEON_DESTROYED==1)
    WIN_GAME
ENDIF


REM 红FLAG0，初始值为0，由后红兵营控制，控制各种刷怪的情况分5档。
REM 白FLAG0，初始值为0，主要由寺庙数量控制，控制在心脏附近的刷怪的时间情况。
REM 白FLAG1，初始值为0，到达白心脏时设置为1。
REM 白FLAG2，初始值为0，到达A1、A2处时设置为1。
REM 白FLAG3，无初始值，人类生物数量小于100它的数量为1，还受审讯室控制，由于都用了重复设置语句，估计两处条件同时满足时有冲突；控制刷人类的总数量。
REM 白FLAG4，无初始值，审讯室大于等于30的标志，控制在H4处刷怪。
REM 白FLAG5，无初始值，审讯室大于等于36的标志，控制在H5处刷怪。
REM 白时钟0，游戏初始时启动，寺庙数量到特定值时重启，如果寺庙数量不达25时不会被重启。
REM 白时钟1，在白FLAG2＝1时被启动，但没有利用过的迹象；估计是写错了应该是白时钟0，用于控制刷怪间隔。

REM 兵营 < 16     >> 红FLAG0＝1
REM 兵营 >= 16   >> 红FLAG0＝2
REM 兵营 >= 25   >> 红FLAG0＝3
REM 兵营 >= 30   >> 红FLAG0＝4
REM 兵营 >= 36   >> 红FLAG0＝5

REM 寺庙>=25
REM     白时钟0 >= 24000 >> 白FLAG0＝1，并重设白时钟0
REM     寺庙>=30 
REM         白时钟0 >= 12000 >> 白FLAG0＝1，并重设白时钟0
REM         寺庙>=36
REM             白时钟0 >= 1200 >> 白FLAG0＝1，并重设白时钟0

REM  白FLAG0＝1
REM      设白FLAG0＝0
REM     人类生物数 < 100  >>  设白FLAG3为1

REM  白FLAG3＝1
REM     红FLAG0＝1  >> 在H3刷白1队
REM     红FLAG0＝2  >> 在H3刷白2队
REM     红FLAG0＝3  >> 在H3刷白3队
REM     红FLAG0＝1  >> 在H3刷白4队

REM 红FLAG0＝5
REM     兵营 < 49      >>  在H3刷白5队
REM     兵营 >= 49    >>  在H3刷白圣者带的队

REM 审讯室 >= 30  >>   白FLAG4＝1
REM                       >>   白FLAG3＝0
REM     审讯室 >= 36   >>   白FLAG5＝1

REM 白FLAG4 == 1
REM     红FLAG0 == 1  >>   在H4刷挖掘者带的白1队
REM     红FLAG0 == 2  >>   在H4刷挖掘者带的白2队
REM     红FLAG0 == 3  >>   在H4刷挖掘者带的白3队
REM     红FLAG0 == 4  >>   在H4刷挖掘者带的白4队
REM     红FLAG0 == 5  >>   在H4刷挖掘者带的白5队
REM       >>  白FLAG4 == 0 （重复）

REM 白FLAG5 == 1
REM     红FLAG0 == 1  >>   在H5刷挖掘者带的白1队
REM     红FLAG0 == 2  >>   在H5刷挖掘者带的白2队
REM     红FLAG0 == 3  >>   在H5刷挖掘者带的白3队
REM     红FLAG0 == 4  >>   在H5刷挖掘者带的白4队
REM     红FLAG0 == 5  >>   在H5刷挖掘者带的白5队
REM       >>  白FLAG5 == 0 （重置）

REM 白FLAG2 == 0
REM     到达A1>>  白FLAG2 == 1
REM     到达A2>>  白FLAG2 == 1

REM 白FLAG2 == 1
REM     红FLAG0 <=3  >>  在H1刷2队
REM                           >>  在H2刷2队
REM     红FLAG0  >3   >>  在H1刷5队
REM                           >>  在H2刷5队
REM     >> 设白FLAG2＝2
REM     >> 重置白时钟1

REM 白FLAG2 = 2
REM     白时钟0 >= 12000 >>  白FLAG2 = 0

REM 到达A3（白心脏处）
REM     >> 白FLAG1 =1 
REM      白FLAG0 <= 3  >>  在H1刷白2队
REM                             >>  在H2刷白2队
REM                             >>  在H6刷白圣者带的队
REM      白FLAG0 > 3    >>  在H1刷白5队
REM                             >>  在H2刷白5队
REM                             >>  在H6刷白圣者带的队














LEVEL_VERSION(1)

SET_GENERATE_SPEED(150)

MAX_CREATURES(PLAYER0,25)
MAX_CREATURES(PLAYER1,42)
MAX_CREATURES(PLAYER2,49)
MAX_CREATURES(PLAYER3,30)



START_MONEY(PLAYER0,200000)
START_MONEY(PLAYER1,28000)
START_MONEY(PLAYER2,28000)
START_MONEY(PLAYER3,800000)


COMPUTER_PLAYER(PLAYER1,0)
COMPUTER_PLAYER(PLAYER2,0)
COMPUTER_PLAYER(PLAYER3,7)


ADD_CREATURE_TO_POOL(WIZARD,20)
ADD_CREATURE_TO_POOL(BARBARIAN,20)
ADD_CREATURE_TO_POOL(ARCHER,20)
ADD_CREATURE_TO_POOL(MONK,20)
ADD_CREATURE_TO_POOL(DWARFA,20)
ADD_CREATURE_TO_POOL(KNIGHT,20)
ADD_CREATURE_TO_POOL(AVATAR,20)
ADD_CREATURE_TO_POOL(TUNNELLER,20)
ADD_CREATURE_TO_POOL(WITCH,20)
ADD_CREATURE_TO_POOL(GIANT,20)
ADD_CREATURE_TO_POOL(FAIRY,20)
ADD_CREATURE_TO_POOL(THIEF,20)
ADD_CREATURE_TO_POOL(SAMURAI,20)
ADD_CREATURE_TO_POOL(IMP,20)
ADD_CREATURE_TO_POOL(HORNY,20)
ADD_CREATURE_TO_POOL(SKELETON,20)
ADD_CREATURE_TO_POOL(TROLL,20)
ADD_CREATURE_TO_POOL(DRAGON,20)
ADD_CREATURE_TO_POOL(DEMONSPAWN,20)
ADD_CREATURE_TO_POOL(FLY,20)
ADD_CREATURE_TO_POOL(DARK_MISTRESS,20)
ADD_CREATURE_TO_POOL(SORCEROR,20)
ADD_CREATURE_TO_POOL(BILE_DEMON,20)
ADD_CREATURE_TO_POOL(BUG,20)
ADD_CREATURE_TO_POOL(VAMPIRE,20)
ADD_CREATURE_TO_POOL(SPIDER,20)
ADD_CREATURE_TO_POOL(HELL_HOUND,20)
ADD_CREATURE_TO_POOL(TENTACLE,20)
ADD_CREATURE_TO_POOL(GHOST,20)
ADD_CREATURE_TO_POOL(ORC,20)




CREATURE_AVAILABLE(ALL_PLAYERS,WIZARD,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,BARBARIAN,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,ARCHER,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,MONK,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,DWARFA,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,KNIGHT,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,AVATAR,0,0)
CREATURE_AVAILABLE(ALL_PLAYERS,TUNNELLER,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,WITCH,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,GIANT,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,FAIRY,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,THIEF,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,SAMURAI,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,IMP,0,0)
CREATURE_AVAILABLE(ALL_PLAYERS,HORNY,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,SKELETON,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,TROLL,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,DRAGON,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,DEMONSPAWN,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,FLY,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,DARK_MISTRESS,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,SORCEROR,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,BILE_DEMON,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,BUG,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,VAMPIRE,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,SPIDER,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,HELL_HOUND,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,GHOST,1,0)
CREATURE_AVAILABLE(ALL_PLAYERS,TENTACLE,0,0)
CREATURE_AVAILABLE(ALL_PLAYERS,ORC,1,0)

DEAD_CREATURES_RETURN_TO_POOL(0)



ROOM_AVAILABLE(ALL_PLAYERS,GUARD_POST,1,0)
ROOM_AVAILABLE(PLAYER0,TREASURE,0,0)
ROOM_AVAILABLE(PLAYER1,TREASURE,1,1)
ROOM_AVAILABLE(PLAYER2,TREASURE,1,1)
ROOM_AVAILABLE(PLAYER3,TREASURE,1,1)
ROOM_AVAILABLE(PLAYER0,RESEARCH,0,0)
ROOM_AVAILABLE(PLAYER1,RESEARCH,1,1)
ROOM_AVAILABLE(PLAYER2,RESEARCH,1,1)
ROOM_AVAILABLE(PLAYER3,RESEARCH,1,1)

ROOM_AVAILABLE(PLAYER0,GARDEN,0,0)
ROOM_AVAILABLE(PLAYER1,GARDEN,1,1)
ROOM_AVAILABLE(PLAYER2,GARDEN,1,1)
ROOM_AVAILABLE(PLAYER3,GARDEN,1,1)

ROOM_AVAILABLE(PLAYER0,LAIR,0,0)
ROOM_AVAILABLE(PLAYER1,LAIR,1,1)
ROOM_AVAILABLE(PLAYER2,LAIR,1,1)
ROOM_AVAILABLE(PLAYER3,LAIR,1,1)

ROOM_AVAILABLE(PLAYER0,WORKSHOP,1,0)
ROOM_AVAILABLE(PLAYER1,WORKSHOP,1,0)
ROOM_AVAILABLE(PLAYER2,WORKSHOP,1,0)

ROOM_AVAILABLE(PLAYER0,GRAVEYARD,1,0)
ROOM_AVAILABLE(PLAYER1,GRAVEYARD,1,0)
ROOM_AVAILABLE(PLAYER2,GRAVEYARD,1,0)
ROOM_AVAILABLE(PLAYER3,GRAVEYARD,1,0)

ROOM_AVAILABLE(PLAYER0,PRISON,1,0)
ROOM_AVAILABLE(PLAYER1,PRISON,1,0)
ROOM_AVAILABLE(PLAYER2,PRISON,1,0)
ROOM_AVAILABLE(PLAYER3,PRISON,1,0)

ROOM_AVAILABLE(PLAYER0,TORTURE,1,0)
ROOM_AVAILABLE(PLAYER1,TORTURE,1,0)
ROOM_AVAILABLE(PLAYER2,TORTURE,1,0)

ROOM_AVAILABLE(PLAYER0,TRAINING,0,0)
ROOM_AVAILABLE(PLAYER1,TRAINING,1,1)
ROOM_AVAILABLE(PLAYER2,TRAINING,1,1)
ROOM_AVAILABLE(PLAYER3,TRAINING,1,1)

ROOM_AVAILABLE(ALL_PLAYERS,SCAVENGER,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,BARRACKS,1,0)
ROOM_AVAILABLE(ALL_PLAYERS,TEMPLE,1,0)
ROOM_AVAILABLE(PLAYER0,BRIDGE,0,0)
ROOM_AVAILABLE(PLAYER2,BRIDGE,0,0)
ROOM_AVAILABLE(PLAYER1,BRIDGE,0,0)


MAGIC_AVAILABLE(PLAYER0,POWER_POSSESS,1,1)
MAGIC_AVAILABLE(PLAYER1,POWER_POSSESS,1,1)
MAGIC_AVAILABLE(PLAYER2,POWER_POSSESS,0,0)
MAGIC_AVAILABLE(PLAYER3,POWER_POSSESS,1,1)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_HAND,1,1)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_OBEY,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_IMP,1,0)
MAGIC_AVAILABLE(PLAYER1,POWER_IMP,1,0)
MAGIC_AVAILABLE(PLAYER2,POWER_IMP,1,0)
MAGIC_AVAILABLE(PLAYER3,POWER_IMP,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_SLAP,1,1)
MAGIC_AVAILABLE(PLAYER1,POWER_SLAP,1,1)
MAGIC_AVAILABLE(PLAYER2,POWER_SLAP,1,1)
MAGIC_AVAILABLE(PLAYER3,POWER_SLAP,1,1)
MAGIC_AVAILABLE(PLAYER0,POWER_SIGHT,0,0)
MAGIC_AVAILABLE(PLAYER1,POWER_SIGHT,1,1)
MAGIC_AVAILABLE(PLAYER2,POWER_SIGHT,0,0)
MAGIC_AVAILABLE(PLAYER3,POWER_SIGHT,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_CALL_TO_ARMS,1,0)
MAGIC_AVAILABLE(PLAYER1,POWER_CALL_TO_ARMS,1,1)
MAGIC_AVAILABLE(PLAYER2,POWER_CALL_TO_ARMS,0,0)
MAGIC_AVAILABLE(PLAYER3,POWER_CALL_TO_ARMS,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_CAVE_IN,1,0)
MAGIC_AVAILABLE(PLAYER1,POWER_CAVE_IN,1,1)
MAGIC_AVAILABLE(PLAYER2,POWER_CAVE_IN,0,0)
MAGIC_AVAILABLE(PLAYER3,POWER_CAVE_IN,1,0)

MAGIC_AVAILABLE(PLAYER0,POWER_HEAL_CREATURE,1,0)
MAGIC_AVAILABLE(PLAYER1,POWER_HEAL_CREATURE,1,1)
MAGIC_AVAILABLE(PLAYER2,POWER_HEAL_CREATURE,0,0)
MAGIC_AVAILABLE(PLAYER3,POWER_HEAL_CREATURE,1,0)

MAGIC_AVAILABLE(ALL_PLAYERS,POWER_HOLD_AUDIENCE,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_CHICKEN,1,0)
MAGIC_AVAILABLE(PLAYER1,POWER_CHICKEN,1,1)
MAGIC_AVAILABLE(PLAYER2,POWER_CHICKEN,0,0)
MAGIC_AVAILABLE(PLAYER3,POWER_CHICKEN,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_SPEED,1,0)
MAGIC_AVAILABLE(PLAYER0,POWER_LIGHTNING,0,0)
MAGIC_AVAILABLE(PLAYER1,POWER_LIGHTNING,1,1)
MAGIC_AVAILABLE(PLAYER2,POWER_LIGHTNING,0,0)
MAGIC_AVAILABLE(PLAYER3,POWER_LIGHTNING,0,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_CONCEAL,0,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_PROTECT,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_DISEASE,0,0)
MAGIC_AVAILABLE(PLAYER1,POWER_DESTROY_WALLS,1,0)
MAGIC_AVAILABLE(PLAYER2,POWER_DESTROY_WALLS,0,0)
MAGIC_AVAILABLE(PLAYER3,POWER_DESTROY_WALLS,0,0)
MAGIC_AVAILABLE(PLAYER0,POWER_DESTROY_WALLS,1,0)
MAGIC_AVAILABLE(ALL_PLAYERS,POWER_ARMAGEDDON,0,0)

REVEAL_MAP_RECT(PLAYER0,79,230,13,13)

IF(PLAYER0,GAME_TURN >= 10)
QUICK_INFORMATION(1,"开始游戏之前，请仔细阅读信息。别担心，现在时间暂时停止了。",PLAYER0)
ENDIF

IF(PLAYER0,GAME_TURN >= 100)
QUICK_INFORMATION(2,"一旦你获得了金子，就是时候对哈尔发起更猛烈的进攻了。他的地下城就在这里。",PLAYER_GOOD)
ENDIF

IF(PLAYER0,GAME_TURN >= 250)
QUICK_INFORMATION(3,"然而，在这片土地上还有另外三个守护者，他们的名字令人无法容忍。你的任务是在进攻哈尔的地下城之前打败他们。他们正在彼此争斗，主要是因为黄金。他们可能知道也可能不知道你的存在。",PLAYER0)
ENDIF

IF(PLAYER0,GAME_TURN >= 500)
QUICK_INFORMATION(4,"第一个是守护者费力肯。没什么好说的，就是个有钱的守护者。",PLAYER3)
ENDIF

IF(PLAYER0,GAME_TURN >= 600)
QUICK_INFORMATION(5,"第二个是守护者佐米能。他缺乏魔法，但拥有大批军队。",PLAYER2)
ENDIF

IF(PLAYER0,GAME_TURN >= 700)
QUICK_INFORMATION(6,"第三位是守护者特卡尔。他是一名出色的守护者，同时拥有强大的力量和魔法。盯紧他！",PLAYER1)
ENDIF

IF(PLAYER0,GAME_TURN >= 800)
QUICK_INFORMATION(7,"当你明白该干什么时，立即开始行动吧。",PLAYER0)
ENDIF

IF(PLAYER0,GAME_TURN >= 1000)
QUICK_OBJECTIVE(8,"所以，守护者，有很多金子就在古普兹-瑟潘斯坦西佩姆策哈巴希特尔的地盘上，你想怎么做？让其他守护者自相残杀？还是一旦研究出招募中心，就开始招募？或者用暴力解决？招降怪物？看你自己，守护者，但要尽可能让你的军队强大，只是一点建议。",PLAYER0)
MAGIC_AVAILABLE(PLAYER0,POWER_IMP,1,1)
MAGIC_AVAILABLE(PLAYER1,POWER_IMP,1,1)
MAGIC_AVAILABLE(PLAYER2,POWER_IMP,1,1)
MAGIC_AVAILABLE(PLAYER3,POWER_IMP,1,1)
	ROOM_AVAILABLE(PLAYER0,TREASURE,1,1)
	ROOM_AVAILABLE(PLAYER0,LAIR,1,1)
	ROOM_AVAILABLE(PLAYER0,GARDEN,1,1)
	ROOM_AVAILABLE(PLAYER0,TRAINING,1,1)
	ROOM_AVAILABLE(PLAYER0,RESEARCH,1,1)
ENDIF

CREATE_PARTY(AVATARS)
ADD_TO_PARTY(AVATARS,AVATAR,6,20000,ATTACK_ENEMIES,0)
ADD_TO_PARTY(AVATARS,AVATAR,6,20000,ATTACK_ENEMIES,0)
ADD_TO_PARTY(AVATARS,AVATAR,6,20000,ATTACK_ENEMIES,0)


IF_ACTION_POINT(1,PLAYER0)
ADD_PARTY_TO_LEVEL(PLAYER_GOOD,AVATARS,+1,2)
QUICK_OBJECTIVE(14,"有埋伏！立即击败他们！",PLAYER_GOOD)
ENDIF

IF_ACTION_POINT(2,PLAYER0)
QUICK_OBJECTIVE(15,"怪了，这样的一座地下城居然这么安静。小心点，守护者！",2)
ENDIF

IF(PLAYER1,DUNGEON_DESTROYED == 1)
QUICK_OBJECTIVE(9,"特卡尔被打败了，守护者！",PLAYER0)
ENDIF

IF(PLAYER2,DUNGEON_DESTROYED == 1)
QUICK_OBJECTIVE(10,"佐米能被打败了，守护者！",PLAYER0)
ENDIF

IF(PLAYER3,DUNGEON_DESTROYED == 1)
QUICK_OBJECTIVE(11,"费力肯被打败了。没有什么新奇的！",PLAYER0)
ENDIF


IF(PLAYER1,DUNGEON_DESTROYED == 1)
	IF(PLAYER2,DUNGEON_DESTROYED == 1)
		IF(PLAYER3,DUNGEON_DESTROYED == 1)
			QUICK_OBJECTIVE(12,"现在只剩你和哈尔了。使用破坏墙壁魔法，然后攻破，占领哈尔的地下城，打败你的敌人！",PLAYER_GOOD)
			MAGIC_AVAILABLE(PLAYER0,POWER_DESTROY_WALLS,1,1)
		ENDIF
	ENDIF
ENDIF

IF(PLAYER_GOOD,DUNGEON_DESTROYED == 1)
	IF_CONTROLS(PLAYER_GOOD,TOTAL_CREATURES <= 0)
		QUICK_OBJECTIVE(13,"太棒了，这是一场精彩的战斗，你赢了！干得好，守护者！是时候一劳永逸地打败哈尔了！",ALL_PLAYERS)
		WIN_GAME
	ENDIF
ENDIF

IF(PLAYER0,GAME_TURN >= 50000)
QUICK_INFORMATION(17,"守护者，由于你在上一个王国开采了黄金，这是你的奖赏！你的笑容一定很灿烂吧！",PLAYER0)
ADD_GOLD_TO_PLAYER(PLAYER0,375000)
ENDIF
